#!/usr/bin/env python
import sys
import time
import argparse
import requests

class Pastebin():
    def __init__(self, path):
        self.path = path
        self.quote = "Soon, I'm going to meet somebody around my own age, "
        self.quote += "and she's going to be smart and beautiful, "
        self.quote += "and I'm going to date her daughter. -Bob Saget"

    def run(self):
        for page in self.scrape_archive():
            self.scrape_page(page)

    def scrape_page(self, page):
        try:
            http = requests.get(
                url='http://pastebin.com/raw.php?i=%s' % page,
                headers={'user-agent':self.quote},
                timeout=10)
            if self.path:
                path = '%s/%s' % (self.path, page)
                p = open(path, 'w+')
                p.write(http.content)
                p.close()
            else:
                sys.stdout.write(http.content)
        except Exception as e:
            sys.stderr.write(str(e))


    def scrape_archive(self):
        try:
            http = requests.get(
                url='http://pastebin.com/archive',
                headers={'user-agent':self.quote})
            for line in http.content.split('\n'):
                if 'border="0" /><a href="/' in line:
                   yield line.split('<a href="/')[-1].split('">')[0]
        except Exception as e:
            sys.stderr.write(str(e))

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--path', help='path to store data')
    parser.add_argument('--time', default=600,
        help='iteration time in seconds (DEFAULT:600)')
    args = parser.parse_args()
    pastebin = Pastebin(args.path)
    while True:
        sys.stderr.write(time.strftime('%d %b %Y %H:%M:%S\n', time.gmtime()))
        pastebin.run()
        time.sleep(int(args.time))
