#!/usr/bin/env python
import os
import sys
import time
import argparse
import requests


def run(md5file, dst, apikeyfile):
    for line in open(apikeyfile, 'r'):
        if not line.startswith('#'):
            apikey = line.rstrip('\r\n')
            download_1000(md5file, dst, apikey)

def download_1000(md5file, dst, apikey):
    save = []
    count = 0
    for line in open(md5file, 'r'):
        count += 1
        if count > 1000:
            success = False
        else:
            success = pull_file(line.rstrip('\r\n'), dst, apikey)
        if not success:
            save.append(line)
    save_new_list(md5file, save)

def save_new_list(md5file, md5_list):
    new = open(md5file, 'w+')
    for md5 in md5_list:
        new.write(md5)
    new.close()

def pull_file(file_hash, dst, apikey):
    payload = {'action': 'getfile', 'api_key': apikey, 'hash' : file_hash }
    r = requests.get("http://api.malshare.com/sampleshare.php", params=payload)
    if r.content == "Sample not found":
        print "Sample not found"
    elif r.content == "ERROR! => Account not activated":
        print "Error"
    elif "ERROR! => Over Request Limit." in r.content:
        print "Over Limit"
    else:
        open(os.path.join(dst, file_hash),"wb").write(r.content)
        return True


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("md5file", help="md5file containing md5s")
    parser.add_argument("dst", help="dst dir for output")
    parser.add_argument("apikeyfile", help="API Key file")
    parser.add_argument("--time", default=86400,
        help="Iteration time in seconds (DEFAULT:86400")
    args = parser.parse_args()
    while True:
        sys.stderr.write(time.strftime('%d %b %Y %H:%M:%S\n', time.gmtime()))
        run(args.md5file, args.dst, args.apikeyfile)
        time.sleep(args.time)

